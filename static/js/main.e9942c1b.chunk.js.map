{"version":3,"sources":["constants/index.js","components/Button/index.js","components/Table/index.js","components/App/index.js","components/Search/index.js","components/Golang/index.js","components/Python/index.js","components/Javascript/index.js","registerServiceWorker.js","index.js"],"names":["DEFAULT_QUERY","BASE_PATH","Button","_ref","onClick","children","_ref$className","className","react_default","a","createElement","prototypes","PropTypes","func","string","node","isRequired","defaultProps","IsLoading","Sort","_ref2","sortKey","onSort","active","sortClass","push","Button_Button","join","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","Table","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isSortReverse","bind","assertThisInitialized","setState","_this$state","_this$props","removeItem","sortedList","reverseSortedList","Button_Sort","map","item","key","objectID","href","url","title","author","num_comments","points","type","Component","arrayOf","shape","number","Search","searchInput","React","createRef","current","focus","onChange","value","onSubmit","FormGroup","style","fontWeight","color","border","width","ref","App","results","searchKey","searchTerm","isLoading","searchValue","setTopStories","fetchStories","id","_results$searchKey","hits","page","updatedList","filter","objectSpread","defineProperty","event","target","fetchedResult","prevState","oldHits","updatedHits","toConsumableArray","concat","updateTopStories","_this2","fetch","then","response","json","result","catch","e","checkTopStories","preventDefault","_this3","_this$state2","Grid","fluid","Row","components_Search","components_Table","ButtonWithLoading","rest","objectWithoutProperties","Button_IsLoading","Golang","Golang_ButtonWithLoading","withLoading","Python","Python_ButtonWithLoading","Javascript","Javascript_ButtonWithLoading","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","ReactDOM","render","BrowserRouter","basename","Navbar","inverse","Header","Brand","NavLink","exact","to","Toggle","Collapse","Nav","NavItem","activeClassName","Route","path","component","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e9942c1b.chunk.js","sourcesContent":["export const DEFAULT_QUERY = \"react\"\nexport const DEFAULT_HITS_PER_PAGE = 10\nexport const BASE_PATH = 'https://hn.algolia.com/api/v1'\nexport const SEARCH_PARAM = 'query='\nexport const SEARCH_PATH = '/search'\nexport const DEFAULT_PAGE = 0\nexport const PARAM_PAGE = 'page='\nexport const PARAM_HITS_PER_PAGE = \"hitsPerPage=\"","import React from 'react';\nimport PropTypes from 'prop-types'\n\n\nexport const Button = ({ onClick, children, className = '' }) =>\n    <button\n        className={className}\n        onClick={onClick} >\n        {children}\n    </button>\n\nButton.prototypes = {\n    onClick: PropTypes.func,\n    className: PropTypes.string,\n    children: PropTypes.node.isRequired,\n}\n\nButton.defaultProps = {\n    className: '',\n}\nexport const IsLoading = () =>\n    <div><h1>loading...</h1></div>\n\n\n\nexport const Sort = ({ sortKey, onSort, children, active }) => {\n    const sortClass = ['btn default sortBtn']\n    if (sortKey === active) {\n        sortClass.push('btn-primary')\n    }\n    return (\n        < Button\n            className={sortClass.join(' ')}\n            onClick={() => onSort(sortKey)}\n        >\n            {children}\n        </Button >\n    )\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { sortBy } from 'lodash';\nimport { Button, Sort } from '../Button/index';\n\n\nconst SORTS = {\n    NONE: list => list,\n    TITLE: list => sortBy(list, 'title'),\n    AUTHOR: list => sortBy(list, 'author'),\n    COMMENTS: list => sortBy(list, 'num_comments').reverse(),\n    POINTS: list => sortBy(list, 'points').reverse(),\n}\nclass Table extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sortKey: 'NONE',\n            isSortReverse: false,\n        }\n        this.onSort = this.onSort.bind(this);\n    }\n\n    onSort(sortKey) {\n        const isSortReverse = this.state.sortKey === sortKey && !this.state.isSortReverse\n        this.setState({ sortKey, isSortReverse });\n    }\n    render() {\n        const { sortKey, isSortReverse } = this.state;\n        const { list, removeItem } = this.props\n        const sortedList = SORTS[sortKey](list);\n        const reverseSortedList = isSortReverse ? sortedList.reverse() : sortedList;\n\n        return (\n            <div className=\"col-sm-10 col-sm-offset-1\">\n                <div className='text-center'>\n                    <Sort\n                        sortKey={'NONE'}\n                        onSort={this.onSort}\n                        active={sortKey}\n                    >\n                        Default\n        </Sort>\n                    <Sort\n                        sortKey={'TITLE'}\n                        onSort={this.onSort}\n                        active={sortKey}\n                    >\n                        Title\n        </Sort>\n                    <Sort\n                        sortKey={'AUTHOR'}\n                        onSort={this.onSort}\n                        active={sortKey}\n                    >\n                        Author\n        </Sort>\n                    <Sort\n                        sortKey={'COMMENTS'}\n                        onSort={this.onSort}\n                        active={sortKey}\n                    >\n                        Comments\n        </Sort>\n                    <Sort\n                        sortKey={'POINTS'}\n                        onSort={this.onSort}\n                        active={sortKey}\n                    >\n                        Points\n        </Sort>\n                    <hr />\n                </div>\n                {\n                    reverseSortedList.map(item =>\n                        <div key={item.objectID}>\n                            <h1>\n                                <a href={item.url}>\n                                    {item.title}</a>\n                            </h1>\n                            <h4>\n                                {item.author} | {item.num_comments} Comments | {item.points} Points\n                <Button\n                                    className=\"btn btn-danger btn-xs\"\n                                    type=\"button\"\n                                    onClick={() => removeItem(item.objectID)}>\n                                    Remove\n                </Button>\n\n                            </h4> <hr />\n                        </div>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\n\nTable.prototypes = {\n    list: PropTypes.arrayOf(\n        PropTypes.shape({\n            objectID: PropTypes.string.isRequired,\n            url: PropTypes.string,\n            title: PropTypes.string,\n            author: PropTypes.string,\n            num_comments: PropTypes.number,\n            points: PropTypes.points,\n        })\n    ),\n    removeItem: PropTypes.func.isRequired,\n}\n\nexport default Table;","import React, { Component } from 'react';\nimport { Grid, Row } from 'react-bootstrap';\nimport {\n    DEFAULT_QUERY, DEFAULT_HITS_PER_PAGE, BASE_PATH, SEARCH_PARAM, SEARCH_PATH,\n    DEFAULT_PAGE, PARAM_PAGE, PARAM_HITS_PER_PAGE\n} from '../../constants/index.js'\nimport Table from '../Table/index'\nimport { Button, IsLoading } from '../Button/index'\nimport Search from '../Search/index'\n\n\n// filter the results by search\n// function isSearched(searchTerm){\n//   return function(item){\n//     return !searchTerm || item.title.toLowerCase().includes(searchTerm.toLowerCase());\n//   }\n// }\n\n\nconst withLoading = (Component) => ({ isLoading, ...rest }) =>\n    isLoading ? <IsLoading /> : <Component {...rest} />\n\nconst updateTopStories = (hits, page) => (prevState) => {\n    const { results, searchKey } = prevState;\n    const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\n    const updatedHits = [...oldHits, ...hits];\n    return {\n        results: { ...results, [searchKey]: { hits: updatedHits, page } },\n        isLoading: false\n    }\n\n}\n\nclass App extends Component {\n    // setting up internal component state\n    // ES6 class can use constructor to initialize internal state\n    constructor(props) {\n        super(props);\n        this.state = {\n            results: null,\n            searchKey: '',\n            searchTerm: DEFAULT_QUERY,\n            isLoading: false,\n\n        }\n\n        this.removeItem = this.removeItem.bind(this);\n        this.searchValue = this.searchValue.bind(this);\n        this.setTopStories = this.setTopStories.bind(this);\n        this.fetchStories = this.fetchStories.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    removeItem(id) {\n        const { results, searchKey } = this.state\n        const { hits, page } = results[searchKey]\n        const updatedList = hits.filter(item => item.objectID !== id);\n        this.setState({ results: { ...results, [searchKey]: { hits: updatedList, page } } });\n    }\n\n    searchValue(event) {\n        this.setState({ searchTerm: event.target.value });\n    }\n\n    setTopStories(fetchedResult) {\n        const { hits, page } = fetchedResult;\n        this.setState(updateTopStories(hits, page))\n    }\n\n    fetchStories(searchTerm, page) {\n        this.setState({ isLoading: true })\n        fetch(`${BASE_PATH}${SEARCH_PATH}?${SEARCH_PARAM}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HITS_PER_PAGE}${DEFAULT_HITS_PER_PAGE}`)\n            .then(response => response.json())\n            .then(result => this.setTopStories(result))\n            .catch(e => e);\n    }\n\n    componentDidMount() {\n        const { searchTerm } = this.state\n        this.setState({ searchKey: searchTerm });\n        this.fetchStories(searchTerm, DEFAULT_PAGE);\n    }\n\n    checkTopStories(searchTerm) {\n        return !this.state.results[searchTerm];\n    }\n\n    onSubmit(event) {\n        const { searchTerm } = this.state\n        this.setState({ searchKey: searchTerm });\n        if (this.checkTopStories(searchTerm)) {\n            this.fetchStories(searchTerm, DEFAULT_PAGE);\n        }\n        event.preventDefault();\n    }\n\n    render() {\n        const { results, searchTerm, searchKey, isLoading } = this.state;\n        const page = (results && results[searchKey] && results[searchKey].page) || 0;\n        const list = (results && results[searchKey] && results[searchKey].hits) || [];\n        return (\n            <div>\n                <Grid fluid>\n                    <Row>\n                        <div className=\"jumbotron text-center\">\n                            <Search\n                                onChange={this.searchValue}\n                                value={searchTerm}\n                                onSubmit={this.onSubmit}\n                            >NEWSAPP</Search>\n                        </div>\n                    </Row>\n                </Grid>\n                <Grid>\n                    <Row>\n                        <Table\n                            list={list}\n                            removeItem={this.removeItem}\n                        />\n                        <div className=\"text-center alert \">\n                            <ButtonWithLoading\n                                isLoading={isLoading}\n                                className=\"btn btn-success lbn\"\n                                onClick={() => this.fetchStories(searchTerm, page + 1)}\n                            >\n                                Load More\n            </ButtonWithLoading>\n                        </div>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst ButtonWithLoading = withLoading(Button)\n\nexport default App;\n\n\n\n\n\n","import React, { Component } from 'react';\nimport { FormGroup } from 'react-bootstrap';\nimport { Button } from '../Button/index';\n\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n        this.searchInput = React.createRef();\n    }\n    componentDidMount() {\n        this.searchInput.current.focus();\n    }\n    render() {\n        const { onChange, value, onSubmit, children } = this.props;\n        return (\n            <form onSubmit={onSubmit}>\n                <FormGroup>\n\n                    <h1 style={{ fontWeight: 'bold', color: 'white' }}>{children}</h1>\n                    <hr style={{ border: '2px solid white', width: '100px' }} />\n\n                    <div className=\"input-group\">\n                        <input\n                            className=\"form-control width100 searchForm\"\n                            type=\"text\"\n                            onChange={onChange}\n                            value={value}\n                            ref={this.searchInput}\n                        />\n                        <span className=\"input-group-btn\">\n                            <Button\n                                className=\"btn btn-primary searchBtn\"\n                                type=\"submit\"\n                            >\n                                Search\n            </Button>\n                        </span>\n                    </div>\n                </FormGroup>\n            </form>\n        )\n    }\n\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport { Grid, Row } from 'react-bootstrap';\nimport {\n    DEFAULT_HITS_PER_PAGE, BASE_PATH, SEARCH_PARAM, SEARCH_PATH,\n    DEFAULT_PAGE, PARAM_PAGE, PARAM_HITS_PER_PAGE\n} from '../../constants/index.js'\nimport Table from '../Table/index'\nimport { Button, IsLoading } from '../Button/index'\n\n\n// filter the results by search\n// function isSearched(searchTerm){\n//   return function(item){\n//     return !searchTerm || item.title.toLowerCase().includes(searchTerm.toLowerCase());\n//   }\n// }\n\n\nconst withLoading = (Component) => ({ isLoading, ...rest }) =>\n    isLoading ? <IsLoading /> : <Component {...rest} />\n\nconst updateTopStories = (hits, page) => (prevState) => {\n    const { results, searchKey } = prevState;\n    const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\n    const updatedHits = [...oldHits, ...hits];\n    return {\n        results: { ...results, [searchKey]: { hits: updatedHits, page } },\n        isLoading: false\n    }\n\n}\n\nclass Golang extends Component {\n    // setting up internal component state\n    // ES6 class can use constructor to initialize internal state\n    constructor(props) {\n        super(props);\n        this.state = {\n            results: null,\n            searchKey: '',\n            searchTerm: \"golang\",\n            isLoading: false,\n\n        }\n\n        this.removeItem = this.removeItem.bind(this);\n        // this.searchValue = this.searchValue.bind(this);\n        this.setTopStories = this.setTopStories.bind(this);\n        this.fetchStories = this.fetchStories.bind(this);\n        // this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    removeItem(id) {\n        const { results, searchKey } = this.state\n        const { hits, page } = results[searchKey]\n        const updatedList = hits.filter(item => item.objectID !== id);\n        this.setState({ results: { ...results, [searchKey]: { hits: updatedList, page } } });\n    }\n\n    // searchValue(event) {\n    //     this.setState({ searchTerm: event.target.value });\n    // }\n\n    setTopStories(fetchedResult) {\n        const { hits, page } = fetchedResult;\n        this.setState(updateTopStories(hits, page))\n    }\n\n    fetchStories(searchTerm, page) {\n        this.setState({ isLoading: true })\n        fetch(`${BASE_PATH}${SEARCH_PATH}?${SEARCH_PARAM}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HITS_PER_PAGE}${DEFAULT_HITS_PER_PAGE}`)\n            .then(response => response.json())\n            .then(result => this.setTopStories(result))\n            .catch(e => e);\n    }\n\n    componentDidMount() {\n        const { searchTerm } = this.state\n        this.setState({ searchKey: searchTerm });\n        this.fetchStories(searchTerm, DEFAULT_PAGE);\n    }\n\n    checkTopStories(searchTerm) {\n        return !this.state.results[searchTerm];\n    }\n\n    // onSubmit(event) {\n    //     const { searchTerm } = this.state\n    //     this.setState({ searchKey: searchTerm });\n    //     if (this.checkTopStories(searchTerm)) {\n    //         this.fetchStories(searchTerm, DEFAULT_PAGE);\n    //     }\n    //     event.preventDefault();\n    // }\n\n    render() {\n        const { results, searchTerm, searchKey, isLoading } = this.state;\n        const page = (results && results[searchKey] && results[searchKey].page) || 0;\n        const list = (results && results[searchKey] && results[searchKey].hits) || [];\n        return (\n            <div>\n                <Grid fluid>\n                    <Row>\n                        <div className=\"jumbotron text-center\">\n                            <h1 style={{ fontWeight: 'bold', color: 'white' }}>Golang</h1>\n                            <hr style={{ border: '2px solid white', width: '100px' }} />\n                        </div>\n                    </Row>\n                </Grid>\n                <Grid>\n                    <Row>\n                        <Table\n                            list={list}\n                            removeItem={this.removeItem}\n                        />\n                        <div className=\"text-center alert \">\n                            <ButtonWithLoading\n                                isLoading={isLoading}\n                                className=\"btn btn-success lbn\"\n                                onClick={() => this.fetchStories(searchTerm, page + 1)}\n                            >\n                                Load More\n            </ButtonWithLoading>\n                        </div>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst ButtonWithLoading = withLoading(Button)\n\nexport default Golang;\n\n\n\n\n\n","import React, { Component } from 'react';\nimport { Grid, Row } from 'react-bootstrap';\nimport {\n    DEFAULT_HITS_PER_PAGE, BASE_PATH, SEARCH_PARAM, SEARCH_PATH,\n    DEFAULT_PAGE, PARAM_PAGE, PARAM_HITS_PER_PAGE\n} from '../../constants/index.js'\nimport Table from '../Table/index'\nimport { Button, IsLoading } from '../Button/index'\n\n\n// filter the results by search\n// function isSearched(searchTerm){\n//   return function(item){\n//     return !searchTerm || item.title.toLowerCase().includes(searchTerm.toLowerCase());\n//   }\n// }\n\n\nconst withLoading = (Component) => ({ isLoading, ...rest }) =>\n    isLoading ? <IsLoading /> : <Component {...rest} />\n\nconst updateTopStories = (hits, page) => (prevState) => {\n    const { results, searchKey } = prevState;\n    const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\n    const updatedHits = [...oldHits, ...hits];\n    return {\n        results: { ...results, [searchKey]: { hits: updatedHits, page } },\n        isLoading: false\n    }\n\n}\n\nclass Python extends Component {\n    // setting up internal component state\n    // ES6 class can use constructor to initialize internal state\n    constructor(props) {\n        super(props);\n        this.state = {\n            results: null,\n            searchKey: '',\n            searchTerm: \"python\",\n            isLoading: false,\n\n        }\n\n        this.removeItem = this.removeItem.bind(this);\n        // this.searchValue = this.searchValue.bind(this);\n        this.setTopStories = this.setTopStories.bind(this);\n        this.fetchStories = this.fetchStories.bind(this);\n        // this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    removeItem(id) {\n        const { results, searchKey } = this.state\n        const { hits, page } = results[searchKey]\n        const updatedList = hits.filter(item => item.objectID !== id);\n        this.setState({ results: { ...results, [searchKey]: { hits: updatedList, page } } });\n    }\n\n    // searchValue(event) {\n    //     this.setState({ searchTerm: event.target.value });\n    // }\n\n    setTopStories(fetchedResult) {\n        const { hits, page } = fetchedResult;\n        this.setState(updateTopStories(hits, page))\n    }\n\n    fetchStories(searchTerm, page) {\n        this.setState({ isLoading: true })\n        fetch(`${BASE_PATH}${SEARCH_PATH}?${SEARCH_PARAM}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HITS_PER_PAGE}${DEFAULT_HITS_PER_PAGE}`)\n            .then(response => response.json())\n            .then(result => this.setTopStories(result))\n            .catch(e => e);\n    }\n\n    componentDidMount() {\n        const { searchTerm } = this.state\n        this.setState({ searchKey: searchTerm });\n        this.fetchStories(searchTerm, DEFAULT_PAGE);\n    }\n\n    checkTopStories(searchTerm) {\n        return !this.state.results[searchTerm];\n    }\n\n    // onSubmit(event) {\n    //     const { searchTerm } = this.state\n    //     this.setState({ searchKey: searchTerm });\n    //     if (this.checkTopStories(searchTerm)) {\n    //         this.fetchStories(searchTerm, DEFAULT_PAGE);\n    //     }\n    //     event.preventDefault();\n    // }\n\n    render() {\n        const { results, searchTerm, searchKey, isLoading } = this.state;\n        const page = (results && results[searchKey] && results[searchKey].page) || 0;\n        const list = (results && results[searchKey] && results[searchKey].hits) || [];\n        return (\n            <div>\n                <Grid fluid>\n                    <Row>\n                        <div className=\"jumbotron text-center\">\n                            <h1 style={{ fontWeight: 'bold', color: 'white' }}>Python</h1>\n                            <hr style={{ border: '2px solid white', width: '100px' }} />\n                        </div>\n                    </Row>\n                </Grid>\n                <Grid>\n                    <Row>\n                        <Table\n                            list={list}\n                            removeItem={this.removeItem}\n                        />\n                        <div className=\"text-center alert \">\n                            <ButtonWithLoading\n                                isLoading={isLoading}\n                                className=\"btn btn-success lbn\"\n                                onClick={() => this.fetchStories(searchTerm, page + 1)}\n                            >\n                                Load More\n            </ButtonWithLoading>\n                        </div>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst ButtonWithLoading = withLoading(Button)\n\nexport default Python;\n\n\n\n\n\n","import React, { Component } from 'react';\nimport { Grid, Row } from 'react-bootstrap';\nimport {\n    DEFAULT_HITS_PER_PAGE, BASE_PATH, SEARCH_PARAM, SEARCH_PATH,\n    DEFAULT_PAGE, PARAM_PAGE, PARAM_HITS_PER_PAGE\n} from '../../constants/index.js'\nimport Table from '../Table/index'\nimport { Button, IsLoading } from '../Button/index'\n\n\n// filter the results by search\n// function isSearched(searchTerm){\n//   return function(item){\n//     return !searchTerm || item.title.toLowerCase().includes(searchTerm.toLowerCase());\n//   }\n// }\n\n\nconst withLoading = (Component) => ({ isLoading, ...rest }) =>\n    isLoading ? <IsLoading /> : <Component {...rest} />\n\nconst updateTopStories = (hits, page) => (prevState) => {\n    const { results, searchKey } = prevState;\n    const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\n    const updatedHits = [...oldHits, ...hits];\n    return {\n        results: { ...results, [searchKey]: { hits: updatedHits, page } },\n        isLoading: false\n    }\n\n}\n\nclass Javascript extends Component {\n    // setting up internal component state\n    // ES6 class can use constructor to initialize internal state\n    constructor(props) {\n        super(props);\n        this.state = {\n            results: null,\n            searchKey: '',\n            searchTerm: \"javascript\",\n            isLoading: false,\n\n        }\n\n        this.removeItem = this.removeItem.bind(this);\n        // this.searchValue = this.searchValue.bind(this);\n        this.setTopStories = this.setTopStories.bind(this);\n        this.fetchStories = this.fetchStories.bind(this);\n        // this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    removeItem(id) {\n        const { results, searchKey } = this.state\n        const { hits, page } = results[searchKey]\n        const updatedList = hits.filter(item => item.objectID !== id);\n        this.setState({ results: { ...results, [searchKey]: { hits: updatedList, page } } });\n    }\n\n    // searchValue(event) {\n    //     this.setState({ searchTerm: event.target.value });\n    // }\n\n    setTopStories(fetchedResult) {\n        const { hits, page } = fetchedResult;\n        this.setState(updateTopStories(hits, page))\n    }\n\n    fetchStories(searchTerm, page) {\n        this.setState({ isLoading: true })\n        fetch(`${BASE_PATH}${SEARCH_PATH}?${SEARCH_PARAM}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HITS_PER_PAGE}${DEFAULT_HITS_PER_PAGE}`)\n            .then(response => response.json())\n            .then(result => this.setTopStories(result))\n            .catch(e => e);\n    }\n\n    componentDidMount() {\n        const { searchTerm } = this.state\n        this.setState({ searchKey: searchTerm });\n        this.fetchStories(searchTerm, DEFAULT_PAGE);\n    }\n\n    checkTopStories(searchTerm) {\n        return !this.state.results[searchTerm];\n    }\n\n    // onSubmit(event) {\n    //     const { searchTerm } = this.state\n    //     this.setState({ searchKey: searchTerm });\n    //     if (this.checkTopStories(searchTerm)) {\n    //         this.fetchStories(searchTerm, DEFAULT_PAGE);\n    //     }\n    //     event.preventDefault();\n    // }\n\n    render() {\n        const { results, searchTerm, searchKey, isLoading } = this.state;\n        const page = (results && results[searchKey] && results[searchKey].page) || 0;\n        const list = (results && results[searchKey] && results[searchKey].hits) || [];\n        return (\n            <div>\n                <Grid fluid>\n                    <Row>\n                        <div className=\"jumbotron text-center\">\n                            <h1 style={{ fontWeight: 'bold', color: 'white' }}>Javascript</h1>\n                            <hr style={{ border: '2px solid white', width: '100px' }} />\n                        </div>\n                    </Row>\n                </Grid>\n                <Grid>\n                    <Row>\n                        <Table\n                            list={list}\n                            removeItem={this.removeItem}\n                        />\n                        <div className=\"text-center alert \">\n                            <ButtonWithLoading\n                                isLoading={isLoading}\n                                className=\"btn btn-success lbn\"\n                                onClick={() => this.fetchStories(searchTerm, page + 1)}\n                            >\n                                Load More\n            </ButtonWithLoading>\n                        </div>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst ButtonWithLoading = withLoading(Button)\n\nexport default Javascript;\n\n\n\n\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport Golang from './components/Golang'\nimport Python from './components/Python'\nimport Javascript from './components/Javascript'\n\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter as Router, Link, Route, NavLink } from 'react-router-dom'\nimport { Navbar, Nav, NavItem } from 'react-bootstrap'\n\nconst Root = () =>\n    <Router basename=\"/myfirst-react-app/\">\n        <div>\n            <Navbar inverse className=\"navbar\">\n                <Navbar.Header>\n                    <Navbar.Brand>\n                        <NavLink exact to=\"/\" className=\"navlink\">NEWSAPP</NavLink>\n                    </Navbar.Brand>\n                    <Navbar.Toggle />\n                </Navbar.Header>\n                <Navbar.Collapse >\n                    <Nav>\n                        <NavItem>\n                            <NavLink to=\"/golang\" activeClassName=\"active\">Golang</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink to=\"/javascript\" activeClassName=\"active\">Javascript</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink to=\"/python\" activeClassName=\"active\">Python</NavLink>\n                        </NavItem>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n            <Route exact path=\"/\" component={App} />\n            <Route exact path=\"/golang\" component={Golang} />\n            <Route exact path=\"/javascript\" component={Javascript} />\n            <Route exact path=\"/python\" component={Python} />\n\n\n        </div>\n    </Router >\nconst About = () =>\n    <div>\n        <h1>This is About Page....</h1>\n    </div>\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}